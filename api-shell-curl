parameters:
  - name: bodyValue1
    displayName: 'Body Value 1'
    type: string
    values:
      - 'Display Option 1'
      - 'Display Option 2'
      - 'Display Option 3'

trigger:
  branches:
    include:
    - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  functionsKey: '/aodjoasidjoaidjaodij=='
  bodyKey1: 'key1'
  bodyValue1: ''
  bodyKey2: 'key2'
  bodyValue2: 'value2'
  SYSTEM_DEBUG: 'true'

steps:
- script: |
    set -e
    set -x
    echo "Mapping user input to desired value"
    case "${{ parameters.bodyValue1 }}" in
      "Display Option 1")
        BODY_VALUE_1="Value 1"
        ;;
      "Display Option 2")
        BODY_VALUE_1="Value 2"
        ;;
      "Display Option 3")
        BODY_VALUE_1="Value 3"
        ;;
      *)
        echo "Invalid input selected"
        exit 1
    esac
    echo "##vso[task.setvariable variable=bodyValue1]$BODY_VALUE_1"
  displayName: 'Map user input to desired value'

- script: |
    set -e
    set -x
    echo "Installing jq"
    sudo apt-get update
    sudo apt-get install -y jq
  displayName: 'Install jq'

- script: |
    set -e
    set -x
    echo "Sending POST request to REST API"
    curl -k -s -X POST \
      -H "Content-Type: application/json" \
      -H "x-functions-key: $(functionsKey)" \
      -d '{
            "$(bodyKey1)": "$(bodyValue1)",
            "$(bodyKey2)": "$(bodyValue2)"
          }' \
      https://abc.com > response.json
  displayName: 'Send POST request to REST API and save response to a file'

- script: |
    set -e
    set -x
    echo "Parsing and pretty-printing JSON response"
    JSON_OUTPUT=$(cat response.json | jq -r '.')
    echo "$JSON_OUTPUT"
  displayName: 'Parse and pretty-print JSON response from file'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: 'response.json'
    artifact: 'response'
  displayName: 'Publish JSON response as pipeline artifact'
